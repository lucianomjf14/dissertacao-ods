#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Script para atualizar a visualiza√ß√£o corrigida usando o logo circular dos ODS
"""

import re

def atualizar_visualizacao_corrigida():
    """Atualiza a visualiza√ß√£o corrigida para usar o logo circular"""
    
    file_path = 'visualizacao_icones_ods_corrigida.html'
    
    try:
        # Ler o arquivo
        with open(file_path, 'r', encoding='utf-8') as f:
            content = f.read()
        
        print(f"‚úÖ Arquivo lido: {len(content)} caracteres")
        
        # Padr√£o para encontrar os containers ODS Geral
        pattern = r'<div class="ods-geral-container"[^>]*>.*?</div>'
        
        # Novo conte√∫do para substituir
        replacement = '''<div class="ods-geral-container" title="ODS Geral - M√∫ltiplos Objetivos">
    <img src="logo-sepado.png" alt="ODS Geral" title="Objetivos de Desenvolvimento Sustent√°vel" 
         style="width: 50px; height: 50px; border-radius: 50%; border: 2px solid #FFD700;">
    <span class="ods-geral-label" style="margin-left: 5px; font-size: 11px; font-weight: bold;">GERAL</span>
</div>'''
        
        # Fazer a substitui√ß√£o
        content_updated = re.sub(pattern, replacement, content, flags=re.DOTALL)
        
        # Contar substitui√ß√µes
        matches_found = len(re.findall(pattern, content, flags=re.DOTALL))
        
        print(f"üîÑ Encontradas {matches_found} ocorr√™ncias de ODS Geral")
        
        # Salvar arquivo atualizado
        with open(file_path, 'w', encoding='utf-8') as f:
            f.write(content_updated)
        
        print(f"‚úÖ Arquivo atualizado: {file_path}")
        print(f"üéØ Logo circular aplicado em {matches_found} locais")
        
        # Criar vers√£o backup da original
        backup_path = 'visualizacao_icones_ods_corrigida_BACKUP.html'
        try:
            with open(backup_path, 'w', encoding='utf-8') as f:
                f.write(content)  # Salva vers√£o original
            print(f"üíæ Backup salvo: {backup_path}")
        except Exception as e:
            print(f"‚ö†Ô∏è N√£o foi poss√≠vel criar backup: {e}")
            
    except Exception as e:
        print(f"‚ùå Erro ao processar arquivo: {e}")

def verificar_resultado():
    """Verifica se a atualiza√ß√£o foi bem-sucedida"""
    
    file_path = 'visualizacao_icones_ods_corrigida.html'
    
    try:
        with open(file_path, 'r', encoding='utf-8') as f:
            content = f.read()
            
        # Verificar se o logo est√° presente
        logo_count = content.count('logo-sepado.png')
        geral_count = content.count('ods-geral-container')
        
        print(f"\nüîç VERIFICA√á√ÉO:")
        print(f"   Logo circular encontrado: {logo_count} vezes")
        print(f"   Containers ODS Geral: {geral_count}")
        
        if logo_count > 0:
            print("‚úÖ Atualiza√ß√£o bem-sucedida!")
        else:
            print("‚ùå Logo n√£o encontrado - pode haver problema")
            
    except Exception as e:
        print(f"‚ùå Erro na verifica√ß√£o: {e}")

if __name__ == "__main__":
    print("üöÄ Atualizando visualiza√ß√£o para usar logo circular dos ODS...")
    atualizar_visualizacao_corrigida()
    verificar_resultado()
    print("‚úÖ Processo conclu√≠do!")
